#! /usr/bin/env ruby

require 'pg'
require 'date'
require 'pry'

class ExpensesData
  def initialize(dbname)
    @connection = PG.connect(dbname: dbname)
  end

  def list_expenses
    result = connection.exec('SELECT * FROM expenses;')

    display(result)
  end

  def add_expense(amount, memo, date = Date.today)
    sql = "INSERT INTO expenses (amount, memo, created_on) VALUES ($1, $2, $3);"
    connection.exec_params(sql, [amount, memo, date])
  end

  def search_expenses(criteria)
    sql = "SELECT * FROM expenses WHERE memo ILIKE $1"
    result =  connection.exec_params(sql, ["%#{criteria}%"])
    display(result)
  end

  private
  attr_reader :connection

  def display(result)
    puts result.fields.join(' | ')

    result.each do |tuple|
      puts tuple.values.join(' | ')
    end
  end
end

class CLI
  def initialize
    @expenses = ExpensesData.new('expenses')
  end

  def run(args)
    command = args.shift
    case command
    when 'list'
      expenses.list_expenses
    when 'add'
      if (2..3).include?(args.length)
        expenses.add_expense(*args)
      else
        puts 'You must provide an amount and memo.'
      end
    when 'search'
      criteria = args[0]
      if criteria
        expenses.search_expenses(criteria)
      else
         puts 'You must provide search criteria.'
       end
    else
      display_help
    end
  end

  def display_help
    puts <<~MESSAGE
      An expense recording system

      Commands:

      add AMOUNT MEMO [DATE] - record a new expense
      clear - delete all expenses
      list - list all expenses
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a matching memo field
    MESSAGE
  end

  private
  attr_reader :expenses
end



CLI.new.run(ARGV)
